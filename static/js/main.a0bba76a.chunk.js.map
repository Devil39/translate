{"version":3,"sources":["App.js","App1.js","serviceWorker.js","index.js"],"names":["React","Component","App","replaceAt","string","index","replacement","substr","length","langChange","event","console","log","target","value","cookie","save","JSON","stringify","fetchCall","a","disable","setState","disabled","Promise","resolve","reject","fetch","load","lang","method","then","resp","status","loading","document","getElementById","focus","response","json","data","translation","itrans","translation_list","twords","options","catch","err","translate","async","key","text","state","specialChar","something","textValue","split","splice","translateWordChange","words","join","changeText","keyCode","lastWord","slice","className","type","onClick","this","id","rows","cols","onKeyUp","autoFocus","translations","map","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0bba76a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport cookie from 'react-cookies';\n//this.state.disabled\nclass App extends React.Component{\n\n  constructor(){\n    super();\n    this.state={\n      text: \"\",\n      translation: \"\",\n      loading: false,\n      translation_list: \"\",\n      disabled: true\n    };\n  }\n\n  handleSpecialChar=(event)=>{\n    var words=event.target.value.split(\" \");\n      //console.log(words);\n      //console.log(words[words.length-2]);\n      words[words.length-2]=this.state.translation;\n      //console.log(this.state.translation);\n      //console.log(words.join(\" \"));\n      this.setState({\n        text: words.join(\" \")\n      });\n      document.getElementById(\"textarea\").value=words.join(\" \");//+\" \"\n  }\n\n  componentWillMount(){\n    cookie.save('translateWebsite', JSON.stringify({\n      \"lang\": \"hindi\"\n    }));\n  }\n\n  /*keyRedirect=()=>{\n     this.changeText()\n  }*/\n\n  langChange=(event)=>{\n    console.log(event.target.value);\n    cookie.save('translateWebsite', JSON.stringify({\n      \"lang\": event.target.value\n    }));\n  }\n\n  translateWordChange=(event)=>{\n    //console.log(event);\n    //console.log(event.target.value);\n    this.setState({\n      translation: event.target.value\n    });\n    var words=this.state.text.split(\" \");\n    //console.log(words);\n    //console.log(words[words.length-2]);\n    words[words.length-1]=event.target.value;\n    //console.log(this.state.translation);\n    //console.log(words.join(\" \"));\n    this.setState({\n      text: words.join(\" \")\n    });\n    document.getElementById(\"textarea\").value=words.join(\" \")+\" \";//+\" \" \n    document.getElementById(\"textarea\").focus();\n  }\n\n  changeText=(event)=>{\n    //console.log(document.getElementById(\"textarea\").value);\n    event.target.value=document.getElementById(\"textarea\").value;\n    this.setState({\n      text: event.target.value\n    });\n    if(event.keyCode===8)\n     {\n       console.log(\"Backspace\");\n       console.log(event.key);\n       return;\n     }\n    if(!this.state.disabled)\n     {\n       return;\n     }\n    var lastWord=event.target.value.split(\" \").slice(-1)[0];\n    var lastChar=lastWord.slice(-1);\n    /*if(lastChar===',' || lastChar===',' || lastChar==='?' || lastChar==='!')\n     {\n      this.handleSpecialChar(event);\n      return;\n     }*/\n    //console.log(event.target.value.split(\" \").slice(-1)[0].slice(-1));\n    //console.log(event.target.value.split(\" \").slice(-1)[0]);\n    /*if(event.target.value)\n     {\n\n     }*/\n    //console.log(event.target.value.split(\" \"));\n    //console.log(\"lastChar: \"+lastChar);\n    if(lastWord!=='')//  && lastChar!==',' && lastChar!=='.' && lastChar!=='?' && lastChar!=='!'// && lastChar===',' && lastChar===',' && lastChar==='?' && lastChar==='!'\n     {\n       //console.log(lastWord);\n       /*if(lastChar===',' || lastChar==='.' || lastChar==='?' || lastChar==='!')\n        {\n          console.log(\"Kuch to karna padega!\");\n          console.log(event.target.value.split(lastChar));\n        }*/\n       this.setState({\n        loading: true,\n        disabled: false\n      });\n      console.log(\"Sending Request!\");\n       fetch(`http://146.148.85.67/processWordJSON?inString=${lastWord}&lang=${cookie.load('translateWebsite').lang}`,{\n        //fetch('https://xlit.quillpad.in/quillpad_backend2/processWordJSON?lang=tamil&inString=namast',{\n          method: \"get\",\n          /*headers: {\n              //\"Access-Control-Allow-Origin\": \"*\",\n              //'Content-type':'text/html;charset=utf-8'\n          }*/\n      })\n      .then((resp)=>{\n        if(resp.status===200)\n        {\n          this.setState({\n            loading: false,\n            disabled: true\n          });\n          document.getElementById(\"textarea\").focus();\n        }\n        return resp;\n      })\n      .then(response => response.json())\n      .then(data=>{\n        console.log(data);\n        this.setState({\n          translation: data.itrans\n        });\n        this.setState({\n          translation_list: data.twords[0].options\n        });\n        //console.log(data.twords[0].optmap);\n        document.getElementById(\"textarea\").value=this.state.text;//+\" \"\n      }).catch((err)=>{\n        console.log(err);\n      });\n     }\n    else{\n      /*if(lastChar===\"\") \n       {\n        console.log(\"Last Space: \"+lastChar);   \n       }\n      else{\n        console.log(\"Last Char: \"+lastChar);\n      }*/\n      //document.getElementById(\"textarea\").value=this.state.text;//+\" \"\n      var words=event.target.value.split(\" \");\n      //console.log(words);\n      //console.log(words[words.length-2]);\n      words[words.length-2]=this.state.translation;\n      //console.log(this.state.translation);\n      //console.log(words.join(\" \"));\n      this.setState({\n        text: words.join(\" \")\n      });\n      document.getElementById(\"textarea\").value=words.join(\" \");//+\" \" \n      /*if(lastChar!==\" \" && lastChar!==\"\")\n       {\n          console.log(words.join(\" \"));\n          document.getElementById(\"textarea\").value=words.join(\" \");//+\" \" \n       }\n      else\n       {\n          document.getElementById(\"textarea\").value=words.join(\" \");//+\" \" \n       }*/\n    }\n    //console.log(\"Last Word:\"+event.target.value.split(\" \")[-1]);\n  }\n\n  render(){\n    return (\n      <div className=\"main-container\"><div>\n            <div className=\"langOption-container\">\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"hindi\">Hindi</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"tamil\">Tamil</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"telugu\">Telugu</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"bengali\">Bengali</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"gujarati\">Gujarati</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"marathi\">Marathi</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"kannada\">Kannada</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"malayalam\">Malayalam</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"punjabi\">Punjabi</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"nepali\">Nepali</button>\n            </div>\n            <div className=\"textbox-container\">\n                <textarea className=\"textbox\" id=\"textarea\" disabled={false} rows=\"10\" cols=\"60\" onKeyUp={(event)=>{\n                  this.changeText(event);\n                }} autoFocus></textarea>\n                {/*Namastey Duniyaa!*/}\n            </div>\n            <div className=\"translation-container\">\n              <div>\n                {\n                  this.state.loading\n                  ?<div>\n                    <p><button type=\"button\" className=\"btn-translation\">Loading...</button></p>\n                  </div>\n                  :<div>\n                      {/*<p>Namastey Duniyaa!</p>*/}\n                      <p>{this.state.translations}</p>\n                      {\n                        this.state.translation_list!==\"\"?this.state.translation_list.map((data)=>{\n                          //console.log(data);\n                          return(\n                            <button type=\"button\" id={data} className=\"btn-translation\" value={data} onClick={this.translateWordChange}>{data}</button>\n                          );\n                        })\n                        :<div></div>\n                      }\n                   </div>\n                }\n              </div>\n            </div>\n          </div>\n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n/*<a href=\"https://www.freepik.com/free-photos-vectors/background\">Background vector created by freepik - www.freepik.com</a>*/","import React from 'react';\nimport './App1.css';\nimport cookie from 'react-cookies';\n//this.state.disabled\nclass App extends React.Component{\n\n  constructor(){\n    super();\n    this.state={\n      text: \"\",\n      translation: \"\",\n      loading: false,\n      translation_list: \"\",\n      disabled: false\n    };\n  }\n\n  replaceAt=(string, index, replacement)=>{\n    return string.substr(0, index) + replacement+ string.substr(index + replacement.length);\n  }\n\n  // handleSpecialChar=(event)=>{\n  //   var words=event.target.value.split(\" \");\n  //     //console.log(words);\n  //     //console.log(words[words.length-2]);\n  //     words[words.length-2]=this.state.translation;\n  //     //console.log(this.state.translation);\n  //     //console.log(words.join(\" \"));\n  //     this.setState({\n  //       text: words.join(\" \")\n  //     });\n  //     document.getElementById(\"textarea\").value=words.join(\" \");//+\" \"\n  // }\n\n  componentWillMount(){\n    cookie.save('translateWebsite', JSON.stringify({\n      \"lang\": \"hindi\"\n    }));\n  }\n\n  /*keyRedirect=()=>{\n     this.changeText()\n  }*/\n\n  langChange=(event)=>{\n    console.log(event.target.value);\n    cookie.save('translateWebsite', JSON.stringify({\n      \"lang\": event.target.value\n    }));\n  }\n\n  fetchCall=(a, disable)=>{\n    //Promise pr((){});\n    //console.log(\"Sending Request For: \"+a);\n    if(disable)\n     {\n       this.setState({\n         disabled: true\n       });\n     }\n    return new Promise((resolve, reject)=>{\n      fetch(`http://146.148.85.67/processWordJSON?inString=${a}&lang=${cookie.load('translateWebsite').lang}`,{\n        //fetch('https://xlit.quillpad.in/quillpad_backend2/processWordJSON?lang=tamil&inString=namast',{\n          method: \"get\",\n      })\n      .then((resp)=>{\n        if(resp.status===200)\n        {\n          this.setState({\n            loading: false\n          });\n          document.getElementById(\"textarea\").focus();\n        }\n        return resp;\n      })\n      .then(response => response.json())\n      .then(data=>{\n        console.log(data);\n        this.setState({\n          translation: data.itrans,\n          \n        });\n        this.setState({\n          translation_list: data.twords[0].options\n        });\n        if(disable)\n         {\n           this.setState({\n            disabled: false\n           });\n           //console.log(\"As Disabled:\"+data.itrans);\n         }\n        resolve();\n        //document.getElementById(\"textarea\").value=this.state.text;//+\" \"\n      }).catch((err)=>{\n        console.log(err);\n        this.setState({\n          disabled: false\n         });\n         //alert(\"Error!\");\n        reject();\n      });\n    });\n  }\n\n  translate = async (event)=>{\n    //console.log(event.key);\n    //console.log(String.fromCharCode(event.keyCode));\n    //if((event.key>='a' && event.key<='z') || (event.key>='A' && event.key<='Z'))\n    if(event.key.length===1 && ((event.key>='a' && event.key<='z') || (event.key>='A' && event.key<='Z')))\n     {\n       //console.log(event.key);\n       //console.log(this.state.text+event.key);\n       this.setState({\n        text: this.state.text+event.key\n      });\n      //var lastWord=\"\";\n      console.log(\"(1)Sending Request for: \"+this.state.text+event.key);\n      this.fetchCall(this.state.text+event.key);\n      /*fetch(`http://146.148.85.67/processWordJSON?inString=${this.state.text+event.key}&lang=${cookie.load('translateWebsite').lang}`,{\n        //fetch('https://xlit.quillpad.in/quillpad_backend2/processWordJSON?lang=tamil&inString=namast',{\n          method: \"get\",\n      })\n      .then((resp)=>{\n        if(resp.status===200)\n        {\n          this.setState({\n            loading: false,\n            disabled: true\n          });\n          document.getElementById(\"textarea\").focus();\n        }\n        return resp;\n      })\n      .then(response => response.json())\n      .then(data=>{\n        console.log(data);\n        this.setState({\n          translation: data.itrans\n        });\n        this.setState({\n          translation_list: data.twords[0].options\n        });\n        //document.getElementById(\"textarea\").value=this.state.text;//+\" \"\n      }).catch((err)=>{\n        console.log(err);\n      });*/\n     }\n    else if(event.key===' ' || event.key===',' || event.key==='.' || event.key==='!' || event.key==='?')\n     {\n       var specialChar=event.key;\n       console.log(\"Setting the word\");\n       this.setState({\n         text: \"\",\n         disabled: true\n       });\n       var something=document.getElementById(\"textarea\").value;\n       var textValue=document.getElementById(\"textarea\").value;\n       //something[something.lenth-1=\" \";\n       something=this.replaceAt(something, something.length-1, \" \");\n       console.log(something);\n       //textValue=textValue.substr(0, textValue.length-1).split(\" \");\n       //console.log(textValue.splice(-1));\n       //console.log(this.state.translation);\n       //console.log(something.split(\" \"));\n       //console.log(something.split(\" \").length);\n       //console.log(something.split(\" \")[something.split(\" \").length-2]);\n       console.log(\"(2)Sending Request for: \"+something.split(event.key)[something.split(event.key).length-1]);\n       await this.fetchCall(something.split(\" \")[something.split(\" \").length-2], true);\n       await console.log(this.state.translation);\n       //something.split(\" \")[something.split(\" \").length-2]=this.state.translation;\n       var a=something.split(\" \")[something.split(\" \").length-2].length+1;\n       //something.slice(-a)=\"\";\n       console.log(something.length-a);//something.slice(-a)\n       console.log(something.length-2);\n       console.log(something.substr(0, something.length-a)+this.state.translation+\" \");\n       console.log(specialChar);\n       if(specialChar!==\" \")\n        {\n          document.getElementById(\"textarea\").value=something.substr(0, something.length-a)+this.state.translation+specialChar+\" \";\n        }\n      else{\n        document.getElementById(\"textarea\").value=something.substr(0, something.length-a)+this.state.translation+\" \";\n      }\n       /*setTimeout(this.setState({\n         disabled: false\n       }), 100);*/\n     }\n    else if(event.key===\"Backspace\")\n     {\n       var textValue=document.getElementById(\"textarea\").value;\n       console.log(textValue[textValue.length]);\n       if(textValue[textValue.length-1]===\" \" || textValue[textValue.length-1]===\",\" || textValue[textValue.length-1]===\".\" || textValue[textValue.length-1]===\"?\" || textValue[textValue.length-1]===\"!\")\n        {\n          return;\n        }\n       //console.log(\"Backing Space\");\n       //console.log(this.state.text.substr(0, this.state.text.length-1));\n       //console.log(document.getElementById(\"textarea\").value);\n       this.setState({\n         text: document.getElementById(\"textarea\").value//this.state.text.substr(0, this.state.text.length-1)\n       });\n       //console.log(\"Sending Request for: \"+textValue);\n       //console.log(textValue[textValue.length-1]);\n       textValue=textValue.substr(0, textValue.length).split(\" \").splice(-1);\n       //console.log(\"Splitted Input:\"+textValue.substr(0, textValue.length).split(\" \"));\n       //console.log(\"Sending Request for: \"+document.getElementById(\"textarea\").value);\n       //this.fetchCall(document.getElementById(\"textarea\").value);\n       console.log(\"(3)Sending Request for: \"+textValue);\n       this.fetchCall(textValue);\n       /*fetch(`http://146.148.85.67/processWordJSON?inString=${document.getElementById(\"textarea\").value}&lang=${cookie.load('translateWebsite').lang}`,{\n        //fetch('https://xlit.quillpad.in/quillpad_backend2/processWordJSON?lang=tamil&inString=namast',{\n          method: \"get\",\n      })\n      .then((resp)=>{\n        if(resp.status===200)\n        {\n          this.setState({\n            loading: false,\n            disabled: true\n          });\n          document.getElementById(\"textarea\").focus();\n        }\n        return resp;\n      })\n      .then(response => response.json())\n      .then(data=>{\n        console.log(data);\n        this.setState({\n          translation: data.itrans\n        });\n        this.setState({\n          translation_list: data.twords[0].options\n        });\n        //document.getElementById(\"textarea\").value=this.state.text;//+\" \"\n      }).catch((err)=>{\n        console.log(err);\n      });*/\n     }\n  }\n\n  translateWordChange=(event)=>{\n    //console.log(event);\n    //console.log(event.target.value);\n    this.setState({\n      translation: event.target.value\n    });\n    var words=document.getElementById(\"textarea\").value.split(\" \");\n    words[words.length-1]=event.target.value;\n    this.setState({\n      text: words.join(\" \")\n    });\n    console.log(words.join(\" \"));\n    document.getElementById(\"textarea\").value=words.join(\" \")+\" \";\n    document.getElementById(\"textarea\").focus();\n  }\n\n  changeText=(event)=>{\n    event.target.value=document.getElementById(\"textarea\").value;\n    this.setState({\n      text: event.target.value\n    });\n    if(event.keyCode===8)\n     {\n       console.log(\"Backspace\");\n       console.log(event.key);\n       return;\n     }\n    if(!this.state.disabled)\n     {\n       return;\n     }\n    var lastWord=event.target.value.split(\" \").slice(-1)[0];\n    var lastChar=lastWord.slice(-1);\n    if(lastWord!=='')\n     {\n       this.setState({\n        loading: true,\n        disabled: false\n      });\n      console.log(\"Sending Request!\");\n       fetch(`http://146.148.85.67/processWordJSON?inString=${lastWord}&lang=${cookie.load('translateWebsite').lang}`,{\n        //fetch('https://xlit.quillpad.in/quillpad_backend2/processWordJSON?lang=tamil&inString=namast',{\n          method: \"get\",\n      })\n      .then((resp)=>{\n        if(resp.status===200)\n        {\n          this.setState({\n            loading: false,\n            disabled: true\n          });\n          document.getElementById(\"textarea\").focus();\n        }\n        return resp;\n      })\n      .then(response => response.json())\n      .then(data=>{\n        console.log(data);\n        this.setState({\n          translation: data.itrans\n        });\n        this.setState({\n          translation_list: data.twords[0].options\n        });\n        document.getElementById(\"textarea\").value=this.state.text;//+\" \"\n      }).catch((err)=>{\n        console.log(err);\n      });\n     }\n    else{\n      var words=event.target.value.split(\" \");\n      words[words.length-2]=this.state.translation;\n      this.setState({\n        text: words.join(\" \")\n      });\n      document.getElementById(\"textarea\").value=words.join(\" \");\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"main-container\"><div>\n            <div className=\"langOption-container\">\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"hindi\">Hindi</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"tamil\">Tamil</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"telugu\">Telugu</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"bengali\">Bengali</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"gujarati\">Gujarati</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"marathi\">Marathi</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"kannada\">Kannada</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"malayalam\">Malayalam</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"punjabi\">Punjabi</button>\n                <button type=\"button\" className=\"btn-lang\" onClick={this.langChange} value=\"nepali\">Nepali</button>\n            </div>\n            <div className=\"textbox-container\">\n                <textarea className=\"textbox\" id=\"textarea\" disabled={this.state.disabled} rows=\"10\" cols=\"60\" onKeyUp={(event)=>{\n                  //this.changeText(event);\n                  this.translate(event);                \n                }} autoFocus></textarea>\n                {/*Namastey Duniyaa!*/}\n            </div>\n            <div className=\"translation-container\">\n              <div>\n                {\n                  this.state.loading\n                  ?<div>\n                    <p><button type=\"button\" className=\"btn-translation\">Loading...</button></p>\n                  </div>\n                  :<div>\n                      {/*<p>Namastey Duniyaa!</p>*/}\n                      <p>{this.state.translations}</p>\n                      {\n                        this.state.translation_list!==\"\"?this.state.translation_list.map((data)=>{\n                          //console.log(data);\n                          return(\n                            <button type=\"button\" id={data} className=\"btn-translation\" value={data} onClick={this.translateWordChange}>{data}</button>\n                          );\n                        })\n                        :<div></div>\n                      }\n                   </div>\n                }\n              </div>\n            </div>\n          </div>\n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n/*<a href=\"https://www.freepik.com/free-photos-vectors/background\">Background vector created by freepik - www.freepik.com</a>*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport App1 from './App1.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App1 />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}